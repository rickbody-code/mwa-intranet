name: Build and deploy Node.js app to Azure Web App - mwa-intranet

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # ðŸ‘‡ Match manual SSH steps that made Prisma work
      - name: Prepare Prisma client
        run: |
          npm rebuild @prisma/client
          npx prisma generate
          npx prisma db push
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Build Next.js app
        run: npm run build

      - name: Package app for deployment
        run: zip -r node-app.zip .next public package.json node_modules prisma next.config.mjs

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: node-app.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_9DAA38CE938B40DDACBEF5E586AA213D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_584F1250D45A48ACB771A9E5D0BEDE22 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_190E921A167A4C30A5F6337280BCA24A }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: mwa-intranet
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: node-app.zip
