generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  name          String?
  image         String?
  role          String         @default("STAFF")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  announcements Announcement[]
}

// New hierarchical link system
model LinkCategory {
  id            String            @id @default(cuid())
  name          String
  description   String?
  order         Int               @default(0)
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  subCategories LinkSubCategory[]
  links         Link[]            // Links directly at category level
}

model LinkSubCategory {
  id               String               @id @default(cuid())
  name             String
  description      String?
  order            Int                  @default(0)
  categoryId       String
  category         LinkCategory         @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt        DateTime             @default(now())
  updatedAt        DateTime             @updatedAt
  subSubCategories LinkSubSubCategory[]
  links            Link[]               // Links directly at subcategory level
}

model LinkSubSubCategory {
  id            String          @id @default(cuid())
  name          String
  description   String?
  order         Int             @default(0)
  subCategoryId String
  subCategory   LinkSubCategory @relation(fields: [subCategoryId], references: [id], onDelete: Cascade)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  links         Link[]          // Links at sub-subcategory level
}

model Link {
  id               String               @id @default(cuid())
  title            String
  url              String
  description      String?
  order            Int                  @default(0)
  createdAt        DateTime             @default(now())
  updatedAt        DateTime             @updatedAt
  
  // Can belong to any level of the hierarchy
  categoryId       String?
  category         LinkCategory?        @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  
  subCategoryId    String?
  subCategory      LinkSubCategory?     @relation(fields: [subCategoryId], references: [id], onDelete: Cascade)
  
  subSubCategoryId String?
  subSubCategory   LinkSubSubCategory?  @relation(fields: [subSubCategoryId], references: [id], onDelete: Cascade)
  
  createdBy        String?
}

// Legacy models - keeping for backward compatibility
model Announcement {
  id        String   @id @default(cuid())
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  String?
  author    User?    @relation(fields: [authorId], references: [id])
  pinned    Boolean  @default(false)
}

model QuickLink {
  id        String   @id @default(cuid())
  label     String
  url       String
  createdAt DateTime @default(now())
  createdBy String?
}

model Staff {
  id         String   @id @default(cuid())
  name       String
  title      String
  email      String   @unique
  phone      String?
  location   String?
  department String?
  image      String?
  createdAt  DateTime @default(now())
}
model MarsdenApp {
  id          String   @id @default(cuid())
  name        String
  description String
  icon        String   // Lucide React icon name (e.g., "Upload", "Settings", "Users")
  url         String
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}